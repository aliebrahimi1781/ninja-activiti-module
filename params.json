{"name":"Ninja-activiti-module","tagline":"Activiti module for Ninja framework","body":"Activiti BPM Engine module for Ninja framework.\r\n===============================================\r\nActiviti (http://activiti.org/) is a light-weight workflow and Business Process Management (BPM) Platform targeted at business people, developers and system admins. Its core is a super-fast and rock-solid BPMN 2 process engine for Java.\r\n\r\nThis module helps running activiti inside Ninja framework (http://www.ninjaframework.org/). \r\n\r\nGetting started\r\n---------------\r\n\r\nSetup\r\n-----\r\n\r\n1) Add the ninja-activiti-module dependency to your pom.xml:\r\n\r\n    <dependency>\r\n        <groupId>ir.cafebabe.ninja</groupId>\r\n        <artifactId>ninja-activiti-module</artifactId>\r\n        <version>0.0.1</version>\r\n    </dependency>\r\n\r\n2) Install the module in your conf.Module:\r\n\r\n    @Override\r\n    protected void configure() {\r\n        install(new ActivitiModule());\r\n    }\r\n    \r\n3) All set! Start Ninja application and activiti engine will be started with an in-memory database and default configs.\r\nyou can inject activiti ProcessEngine, FormService, TaskService, ... in your code.\r\n\r\n    @Singleton\r\n    public class Sample {\r\n    \r\n        @Inject\r\n        ProcessEngine processEngine;\r\n        @Inject\r\n        FormService formService;\r\n        @Inject\r\n        HistoryService historyService;\r\n        @Inject\r\n        IdentityService identityService;\r\n        @Inject\r\n        RepositoryService repositoryService;\r\n        @Inject\r\n        RuntimeService runtimeService;\r\n        @Inject\r\n        ManagementService managementService;\r\n        @Inject\r\n        TaskService taskService;\r\n\r\n    }\r\n\r\n\r\nActiviti Engine Configurations\r\n------------------------------\r\n\r\n1) You can create activiti.cfg.xml in 'conf' directory. This file will be used as a default activiti configurations. for more detail on how to use the file refer to \"www.activiti.org/userguide/\". \r\n\r\n2) You can also choose the \"configuration file\" in conf/application.conf.\r\n    \r\n    activiti.cfg.path=conf/my.activiti.cfg.xml\r\n    %test.activiti.cfg.path=conf/mytest.activiti.cfg.xml\r\n\r\n3) There is also possibility to set activiti configuration in  conf/application.conf file without providing activiti xml configuration file.\r\n\r\n    ...\r\n    activiti.jdbcDriver=org.h2.Driver\r\n    activiti.jdbcUrl=jdbc:h2:mem:activiti;DB_CLOSE_DELAY=1000\r\n    activiti.jdbcUsername=sa\r\n    activiti.jdbcPassword=\r\n    activiti.mailServerHost=localhost\r\n    ...\r\n\r\n  consult activiti documents for list of all process engine configurations \"www.activiti.org/userguide/\".\r\n\r\n4) Mixed-mode: You can also mix xml and property configuration. by providing both activiti.cfg.xml file and ninja properties(conf/application.conf). configs in conf/application.conf overrides xml configuration.\r\n\r\n5) No configuration: If there was no configuration, the default activiti configurations with an in-memory database will be applied.\r\n\r\nOrder of applying configurations\r\n-------------------------------\r\n\r\n Step1) If Default activiti.cfg.xml is provided it will be read unless you explicitly set the config file path in  \"conf/application.conf\" --> activiti.cfg.path=conf/my.activiti.cfg.xml\r\n\r\n Step2) If there are activiti configuration in \"conf/application.conf\" they will be override xml configurations.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}